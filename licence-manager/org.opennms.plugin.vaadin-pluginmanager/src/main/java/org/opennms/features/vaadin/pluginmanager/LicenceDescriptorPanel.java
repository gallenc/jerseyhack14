package org.opennms.features.vaadin.pluginmanager;


import org.opennms.karaf.licencemgr.metadata.Licence;
import org.opennms.karaf.licencemgr.metadata.jaxb.LicenceMetadata;
import org.opennms.karaf.licencemgr.metadata.jaxb.OptionMetadata;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class LicenceDescriptorPanel extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,2","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private VerticalLayout licenceMetadataVerticalLayout;

	@AutoGenerated
	private VerticalLayout licenceOptionsVerticalLayout;

	@AutoGenerated
	private TextField featureRepositoryTextField;

	@AutoGenerated
	private TextField systemIdTextField;

	@AutoGenerated
	private TextField startDateTextField;

	@AutoGenerated
	private TextField expiryDateTextField;

	@AutoGenerated
	private TextField durationTextField;

	@AutoGenerated
	private TextField licensorTextField;

	@AutoGenerated
	private TextField licenseeTextField;

	@AutoGenerated
	private TextField productIdTextField;

	@AutoGenerated
	private TextArea licenceTextArea;

	private static final long serialVersionUID = 1L;


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LicenceDescriptorPanel() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	/**
	 * updates the metadata fields from the licence string
	 * if unable to read the metadata then returns false
	 * @param licenceStr
	 * @return true if metadata read, false if not
	 */
	public boolean updateMetadata(String licenceStr){

		boolean success = false;

		if (licenceStr!=null) {

			LicenceMetadata licenceMetadata=null;

			try {
				licenceMetadata = Licence.getUnverifiedMetadata(licenceStr);
			} catch (Exception e) {
				// can't decode string licenceMetadata will be null
			}

			if (licenceMetadata==null) {
				//create empty licenceMetadata panel
				licenceMetadata= new LicenceMetadata();
				licenceMetadata.setStartDate(null);
				licenceMetadata.setProductId("cannot decode licence string");
				success=false;
			} else success=true;

			productIdTextField.setValue( (licenceMetadata.getProductId()==null )?  "":licenceMetadata.getProductId());
			featureRepositoryTextField.setValue( (licenceMetadata.getFeatureRepository()==null )?  "":licenceMetadata.getFeatureRepository());
			systemIdTextField.setValue( (licenceMetadata.getSystemId()==null )?  "":licenceMetadata.getSystemId());

			//TODO MAY NEED DATE FORMATTING
			startDateTextField.setValue( (licenceMetadata.getStartDate()==null )?  "":licenceMetadata.getStartDate().toString());
			expiryDateTextField.setValue( (licenceMetadata.getExpiryDate()==null )?  "":licenceMetadata.getExpiryDate().toString());

			durationTextField.setValue( (licenceMetadata.getDuration()==null )?  "":Integer.toString(licenceMetadata.getDuration()));
			licenseeTextField.setValue( (licenceMetadata.getLicensee()==null )?  "":licenceMetadata.getLicensee());
			licensorTextField.setValue( (licenceMetadata.getLicensor()==null )?  "":licenceMetadata.getLicensor());

			if (licenceMetadata.getOptions()==null || licenceMetadata.getOptions().isEmpty()){
				licenceOptionsVerticalLayout.removeAllComponents();
				Label l = new Label("No Licence Options Defined");
				licenceOptionsVerticalLayout.addComponent(l);
			} else {
				for (OptionMetadata option: licenceMetadata.getOptions()){
					TextField optionField = new TextField();
					optionField.setImmediate(false);
					optionField.setWidth("400px");
					optionField.setHeight("-1px");
					optionField.setCaption(option.getName());
					optionField.setValue(option.getValue());
					optionField.setDescription(option.getDescription());
					licenceOptionsVerticalLayout.addComponent(optionField);
				}
			}
			
			mainLayout.markAsDirty();

		}
		return success;
	}

	public boolean setLicenceString(String licenceStr){
		if (licenceStr==null) {
			licenceTextArea.setValue("");
		} else {
			licenceTextArea.setValue(licenceStr);
		}
		return updateMetadata(licenceStr);
	}

	public String getLicenceString(){
		String licenceStr=licenceTextArea.getValue();
		return licenceStr;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// licenceTextArea
		licenceTextArea = new TextArea();
		licenceTextArea.setCaption("Licence String");
		licenceTextArea.setImmediate(false);
		licenceTextArea.setWidth("400px");
		licenceTextArea.setHeight("200px");
		mainLayout.addComponent(licenceTextArea);
		
		// licenceMetadataVerticalLayout
		licenceMetadataVerticalLayout = buildLicenceMetadataVerticalLayout();
		mainLayout.addComponent(licenceMetadataVerticalLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildLicenceMetadataVerticalLayout() {
		// common part: create layout
		licenceMetadataVerticalLayout = new VerticalLayout();
		licenceMetadataVerticalLayout.setCaption("Licence Metadata");
		licenceMetadataVerticalLayout.setImmediate(false);
		licenceMetadataVerticalLayout.setWidth("-1px");
		licenceMetadataVerticalLayout.setHeight("-1px");
		licenceMetadataVerticalLayout.setMargin(false);
		
		// productIdTextField
		productIdTextField = new TextField();
		productIdTextField.setCaption("Product Id");
		productIdTextField.setImmediate(false);
		productIdTextField.setWidth("400px");
		productIdTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(productIdTextField);
		
		// licenseeTextField
		licenseeTextField = new TextField();
		licenseeTextField.setCaption("Licensee");
		licenseeTextField.setImmediate(false);
		licenseeTextField
				.setDescription("The person or organisation to whom the licence applies.");
		licenseeTextField.setWidth("400px");
		licenseeTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(licenseeTextField);
		
		// licensorTextField
		licensorTextField = new TextField();
		licensorTextField.setCaption("Licensor");
		licensorTextField.setImmediate(false);
		licensorTextField
				.setDescription("The person or organisation issuing the licence");
		licensorTextField.setWidth("400px");
		licensorTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(licensorTextField);
		
		// durationTextField
		durationTextField = new TextField();
		durationTextField.setCaption("Duration");
		durationTextField.setImmediate(false);
		durationTextField
				.setDescription("The duration in days from the start date.");
		durationTextField.setWidth("400px");
		durationTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(durationTextField);
		
		// expiryDateTextField
		expiryDateTextField = new TextField();
		expiryDateTextField.setCaption("Expiry Date");
		expiryDateTextField.setImmediate(false);
		expiryDateTextField
				.setDescription("The date after which the licence expires. Note if present, Duration takes priority over this date.");
		expiryDateTextField.setWidth("400px");
		expiryDateTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(expiryDateTextField);
		
		// startDateTextField
		startDateTextField = new TextField();
		startDateTextField.setCaption("Start Date");
		startDateTextField.setImmediate(false);
		startDateTextField
				.setDescription("The date on which the licence becomes valid");
		startDateTextField.setWidth("400px");
		startDateTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(startDateTextField);
		
		// systemIdTextField
		systemIdTextField = new TextField();
		systemIdTextField.setCaption("System Id");
		systemIdTextField.setImmediate(false);
		systemIdTextField
				.setDescription("The unique id of the system to which this licence applies");
		systemIdTextField.setWidth("400px");
		systemIdTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(systemIdTextField);
		
		// featureRepositoryTextField
		featureRepositoryTextField = new TextField();
		featureRepositoryTextField.setCaption("Feature Repository");
		featureRepositoryTextField.setImmediate(false);
		featureRepositoryTextField.setWidth("400px");
		featureRepositoryTextField.setHeight("-1px");
		licenceMetadataVerticalLayout.addComponent(featureRepositoryTextField);
		
		// licenceOptionsVerticalLayout
		licenceOptionsVerticalLayout = new VerticalLayout();
		licenceOptionsVerticalLayout.setCaption("Licence Options");
		licenceOptionsVerticalLayout.setImmediate(false);
		licenceOptionsVerticalLayout.setWidth("-1px");
		licenceOptionsVerticalLayout.setHeight("-1px");
		licenceOptionsVerticalLayout.setMargin(false);
		licenceMetadataVerticalLayout
				.addComponent(licenceOptionsVerticalLayout);
		
		return licenceMetadataVerticalLayout;
	}

}
